{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/NavBar.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Notifications.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedOutLinks","state","console","log","firebase","links","uid","ProjectSummary","project","title","authorFirstName","authorLastName","moment","createdAt","toDate","calendar","ProjectList","projects","map","id","key","Notifications","notifications","item","user","content","time","fromNow","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","res","doc","set","CreateProject","createProject","history","push","authorId","add","Date","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","rrfProps","config","userProfile","useFirestoreForProfile","createFirestoreInstance","AuthIsLoaded","children","useSelector","isLoaded","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.d1af4b43.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux'\r\nimport { signOut } from '../../store/actions/authActions'\r\n\r\nconst SignedInLinks = (props) => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to=\"/create\">New Project</NavLink></li>\r\n            <li><a onClick={props.signOut}>Log Out</a></li>\r\n        <li><NavLink to=\"/\" className=\"btn btn-floating orange darken-2\">{ props.profile.initials }</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks)","export const signIn = (credentials) => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch({ type: 'LOGIN_SUCCESS'})\r\n        }).catch((err) => {\r\n            dispatch({ type: 'LOGIN_ERROR', err})\r\n        });\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({ type: 'SIGNOUT_SUCCESS' });\r\n        });\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore}) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((res) => {\r\n            return firestore.collection('users').doc(res.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: newUser.firstName[0] + newUser.lastName[0]\r\n            })\r\n        }).then(() => {\r\n            dispatch({ type: 'SIGNUP_SUCCESS' })\r\n        }).catch(err => {\r\n            dispatch({ type: 'SIGNUP_ERROR', err })\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nfunction SignedOutLinks() {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to=\"/signup\">Sign Up</NavLink></li>\r\n            <li><NavLink to=\"/signin\">Log In</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default SignedOutLinks;","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport SignedInLinks from './SignedInLinks';\r\nimport SignedOutLinks from './SignedOutLinks';\r\nimport { connect } from 'react-redux'\r\n\r\nfunction NavBar(props) {\r\n    const { auth, profile } = props;\r\n    const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />;\r\n    return (\r\n        <nav className=\"nav-wrapper grey darken-3\">\r\n            <div className=\"container\">\r\n                <Link to='/' className=\"brand-logo\">Project Management Tool</Link>\r\n                { links }\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps =(state) => {\r\n    console.log(state)\r\n    return {\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(NavBar)","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nfunction ProjectSummary({project}) {\r\n    return (\r\n        <div className=\"card z-depth-5 project-summary border-2\">\r\n                <div className=\"card-content grey-text text-darken-3\">\r\n                    <span className=\"card-title\">{project.title}</span>\r\n                    <p>Posted by { project.authorFirstName } { project.authorLastName }</p>\r\n                    <p className=\"orange-text text-darken-4\">{moment(project.createdAt.toDate()).calendar()}</p>\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectSummary;\r\n","import React from 'react'\r\nimport ProjecSummary from './ProjectSummary'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction ProjectList({projects}) {\r\n    return (\r\n        <div className=\"project-list section\">\r\n            {/* The reason for \"&&\" is that if there are no projects then it\r\n            won't got to map */}\r\n           { projects && projects.map(project => {\r\n               return (\r\n                   <Link to={'/project/' + project.id} key={project.id}>\r\n                   <ProjecSummary project={project} />\r\n                   </Link>\r\n               )\r\n           })} \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectList;\r\n","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nfunction Notifications(props) {\r\n    const {notifications} = props\r\n    return (\r\n        <div className=\"section\">\r\n            <div className=\"card z-depth-5\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">Notifications</span>\r\n                    <ul className=\"notification\">\r\n                        {notifications && notifications.map(item => {\r\n                            return(\r\n                            <li key={item.id}><span className=\"orange-text text-darken-4\">{item.user} </span>\r\n                            <span>{item.content}</span>\r\n                            <div className=\"grey-text note-date\">\r\n                            {moment(item.time.toDate()).fromNow()}\r\n                            </div>\r\n                            </li>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </div>            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notifications\r\n","import React, { Component } from 'react'\r\nimport ProjectList from '../projects/ProjectList'\r\nimport Notifications from './Notifications'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass Dashboard extends Component {\r\n  render() {\r\n    // console.log(this.props)\r\n    const { projects, auth, notifications } = this.props;\r\n    if (!auth.uid) return <Redirect to='/signin' /> \r\n    return (\r\n      <div className=\"dashboard container\">\r\n        <div className=\"row\">\r\n          <div className=\"col s12 m6\">\r\n            <ProjectList projects={projects}/>\r\n          </div>\r\n          <div className=\"col s12 m5 offset-m1\">\r\n            <Notifications notifications={notifications} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    projects: state.firestore.ordered.projects,\r\n    auth: state.firebase.auth,\r\n    notifications: state.firestore.ordered.notifications\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: 'projects', orderBy: ['createdAt', 'desc']},\r\n    { collection: 'notifications', limit: 3, orderBy: ['time', 'desc']}\r\n  ])\r\n)(Dashboard)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect} from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport moment from 'moment'\r\n\r\nfunction ProjectDetails(props) {\r\n    const { project, auth } = props;\r\n    if (!auth.uid) return <Redirect to='/signin' />\r\n    if (project) {\r\n        return(\r\n        <div className=\"container section project-details\">\r\n            <div className=\"card z-depth-5\">\r\n                <div className=\"card-content\">\r\n                <span className=\"card-title\">{ project.title }</span>\r\n                    <p>{ project.content }</p>\r\n                </div>\r\n                <div className=\"card-action grey lighten-4 orange-text text-darken-4\">\r\n                    <div>Posted by { project.authorFirstName } { project.authorLastName }</div>\r\n                    <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"container center\">\r\n            <p>Loading project...</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const id = ownProps.match.params.id;\r\n    const projects = state.firestore.data.projects;\r\n    const project = projects ? projects[id] : null\r\n    return {\r\n        project: project,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects'}\r\n    ])\r\n)(ProjectDetails)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { signIn } from '../../store/actions/authActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signIn(this.state);\r\n    }\r\n    render() {\r\n        const { authError, auth } = this.props\r\n        if (auth.uid) return <Redirect to='/' />\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"inpput-field\">\r\n                    <button className=\"btn orange darken-2 z-depth-0\">Login</button>\r\n                    <div className=\"red-text center\">\r\n                    { authError ? <p>{ authError }</p> : null }\r\n                    </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn: (creds) => dispatch(signIn(creds)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { signUp } from '../../store/actions/authActions'\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signUp(this.state)\r\n    }\r\n    render() {\r\n        const { auth, authError } = this.props;\r\n        if (auth.uid) return <Redirect to='/' />\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastName\">Last Name</label>\r\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                    <button className=\"btn orange darken-2 z-depth-0\">Sign Up</button>\r\n                    </div>\r\n                    <div className=\"red-text center\">\r\n                    { authError ? <p>{ authError }</p> : null }\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUp: (newUser) => dispatch(signUp(newUser))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createProject } from '../../store/actions/projectActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass CreateProject extends Component {\r\n    state = {\r\n        title: '',\r\n        content: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.createProject(this.state)\r\n        this.props.history.push('/');\r\n    }\r\n    render() {\r\n        const { auth } = this.props;\r\n        if (!auth.uid) return <Redirect to='/signin' />\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Create New Project</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\">Title</label>\r\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"content\">Project Content</label>\r\n                        <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n                    </div>\r\n                    <div className=\"inpput-field\">\r\n                    <button className=\"btn orange darken-2 z-depth-0\">Create</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createProject: (project) => dispatch(createProject(project))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)\r\n","export const createProject = (project) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        // make async call to database\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;\r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorId: authorId,\r\n            createdAt: new Date()\r\n        }).then(() => {\r\n            dispatch({ type: 'CREATE_PROJECT', project })\r\n        }).catch((err) => {\r\n            dispatch({ type: 'CREATE_PROJECT_ERROR', err })\r\n        })\r\n    }\r\n}","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport NavBar from './components/layout/NavBar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject';\n\nclass App extends Component {\n  render() {\n    return (\n    <BrowserRouter>\n    <div className=\"App\">\n      <NavBar />\n      <Switch>\n        <Route exact path=\"/\" component={Dashboard} />\n        <Route path=\"/project/:id\" component={ProjectDetails} />\n        <Route path=\"/signin\" component={SignIn} />\n        <Route path=\"/signup\" component={SignUp} />\n        <Route path=\"/create\" component={CreateProject} />\n      </Switch>\n    </div>\n    </BrowserRouter>\n  );\n}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\r\nconst initState = {\r\n    authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch(action.type) {\r\n        case 'LOGIN_ERROR':\r\n            console.log('login error');\r\n            return {\r\n                ...state,\r\n                authError: 'Login Failed'\r\n            }\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('login success');\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('signout success');\r\n            return state;\r\n        case 'SIGNUP_SUCCESS':\r\n                console.log('signup success');\r\n                return {\r\n                    ...state,\r\n                    authError: null\r\n                }\r\n        case 'SIGNUP_ERROR':\r\n                console.log('signup error');\r\n                return {\r\n                    ...state,\r\n                    authError: action.err.message\r\n                }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authReducer","\r\nconst initState = {\r\n    projects: [\r\n        {id: '1', title: 'first', content: 'first project'},\r\n        {id: '2', title: 'second', content: 'second project'},\r\n        {id: '3', title: 'third', content: 'third project'},\r\n    ]\r\n}\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n    switch(action.type) {\r\n        case 'CREATE_PROJECT':\r\n            console.log('project created', action.project);\r\n            return state;\r\n        case 'CREATE_PROJECT_ERROR':\r\n            console.log('create project error', action.err);\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default projectReducer","import authReducer from './authReducer'\r\nimport projectReducer from './projectReducer'\r\nimport { combineReducers } from 'redux'\r\nimport { firestoreReducer } from 'redux-firestore'\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer","  import firebase from 'firebase/app'\r\n  import 'firebase/firestore'\r\n  import 'firebase/auth'\r\n\r\n  // Your web app's Firebase configuration\r\n  var firebaseConfig = {\r\n    apiKey: \"AIzaSyCORLzeQXScfM44OGGJefVl8u-EJgu5rWE\",\r\n    authDomain: \"project-management-tool-25019.firebaseapp.com\",\r\n    databaseURL: \"https://project-management-tool-25019.firebaseio.com\",\r\n    projectId: \"project-management-tool-25019\",\r\n    storageBucket: \"project-management-tool-25019.appspot.com\",\r\n    messagingSenderId: \"231340292167\",\r\n    appId: \"1:231340292167:web:cb6dadc378594320ad1962\",\r\n    measurementId: \"G-Y99RLG8FHE\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n  firebase.firestore()\r\n\r\n  export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider, useSelector } from 'react-redux'\nimport thunk from'redux-thunk'\nimport { reduxFirestore, getFirestore, createFirestoreInstance } from 'redux-firestore'\nimport { ReactReduxFirebaseProvider, getFirebase, isLoaded } from 'react-redux-firebase'\n// last two imports are responsible to connect our project to firebase and firestore\nimport fbConfig from './config/fbConfig'\nimport firebase from \"firebase/app\";\n\nconst store = createStore(rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore(firebase, fbConfig)\n    )\n  );\n\nconst rrfConfig = {\n  userProfile: 'users',\n  useFirestoreForProfile: true\n}\n\nconst rrfProps = {\n  firebase,\n  config: rrfConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance\n};\n\nfunction AuthIsLoaded({ children }) {\n  const auth = useSelector(state => state.firebase.auth)\n  if (!isLoaded(auth)) return <div>Loading Screen...</div>;\n      return children\n}\n\nReactDOM.render(\n  // <React.StrictMode>\n    <Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n    <AuthIsLoaded><App /></AuthIsLoaded>\n    </ReactReduxFirebaseProvider>\n    </Provider>,\n  document.getElementById('root')\n);\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}